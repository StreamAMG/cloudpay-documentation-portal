x-stoplight:
  docs:
    showModels: false
openapi: 3.0.3
info:
  title: CloudPay API Specification
  description: |
    The following API Specification outlines the external API access points for the CloudPay application.

    The resources within this document provide examples of requests and responses to help development teams with CloudPay Integration.
  version: 1.0.0
  contact:
    name: Jonathon Robins
tags:
  - name: Session
  - name: SSO
  - name: Account
  - name: Packages
  - name: IAP
  - name: Scripts
  - name: Models
  - name: User
  - name: Resume
paths:
  /sso/start:
    get:
      summary: Start a SSO Session
      parameters:
        - $ref: '#/components/parameters/languageParam'
        - in: query
          name: token
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          required: true
          description: The Third-Party SSO token
      responses:
        '200':
          description: Successful Response containing the Set-Cookie header containing the token. This will be stored within the browsers Cookie store for **2 hours**
          headers:
            Set-Cookie:
              schema:
                type: string
                example: 'ThirdPartyAuthentication=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c; Path=/; expires=${2 hours}; SameSite=None; Secure; HttpOnly'
              description: The cookie which will be stored in the cookie store
        '500':
          description: Unsuccessful SSO login response
          content:
            application/json:
              schema:
                description: ''
                type: object
              examples:
                Failed Login Response:
                  value:
                    ErrorMessage: Invalid Login Request
      description: |-
        In order to perform queries against the CloudPay API a user must first initialise a session. This can be done for SSO users by generating a SSO Session. 

        Once a client has successfully setup their JWT enviroment within CloudPay, calling the SSO Start endpoint will initialise a session using their own JWT Authentication strategy and **tokens**. 

        **Note** *The Token from the Client will be validated and used throughout the API to track the clients session, CloudPay will not generate any new Tokens on behalf of the client*
      operationId: generate-sso-session
      tags:
        - SSO
    parameters: []
  '/sso/start/{redirect}':
    get:
      summary: Start a SSO Session with Redirect
      parameters:
        - $ref: '#/components/parameters/languageParam'
        - in: query
          name: token
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          required: true
          description: The Third-Party SSO token
        - in: path
          name: redirect
          schema:
            type: string
            example: cmV0dXJudXJsOi9hY2NvdW50
          required: true
          description: 'Redirect URL for SSO Start, This URL should be base64 encoded and start with "returnurl:" followed by the path e.g. cmV0dXJudXJsOi9hY2NvdW50'
      responses:
        '302':
          description: Successful Redirection Response containing the Set-Cookie header containing the token. This will be stored within the browsers Cookie store for **2 hours**
          headers:
            Location:
              schema:
                type: string
                example: payments.website.com/sso/verify/h4YnEwkle12d9xs
              description: The redirect URL used to relocate the browser on response. Please note this address is taken from the Host caller and appends **/sso/verify** followed by the path redirect parameter
            Set-Cookie:
              schema:
                type: string
                example: 'ThirdPartyAuthentication=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c; Path=/; expires=${2 hours}; SameSite=None; Secure; HttpOnly'
              description: The cookie which will be stored in the cookie store
        '500':
          description: Unsuccessful SSO login response
          content:
            application/json:
              schema:
                description: ''
                type: object
              examples:
                Failed Login Response:
                  value:
                    ErrorMessage: Invalid Login Request
      description: |-
        In order to perform queries against the CloudPay API a user must first initialise a session. This can be done for SSO users by generating a SSO Session.

        Once a client has successfully setup their JWT enviroment within CloudPay, calling the SSO Start endpoint will initialise a session using their own JWT Authentication strategy and **tokens**.

        The redirect path parameter consists of a base64 encoded string starting with "returnurl:", as an example "returnurl:/account" would encode to cmV0dXJudXJsOi9hY2NvdW50

        **Note** *The Token from the Client will be validated and used throughout the API to track the clients session, CloudPay will not generate any new Tokens on behalf of the client*
      operationId: generate-sso-session-redirect
      tags:
        - SSO
    parameters:
      - schema:
          type: string
          example: cmV0dXJudXJsOi9hY2NvdW50
        name: redirect
        in: path
        description: 'Redirect URL for SSO Start, This URL should be base64 encoded and start with "returnurl:" followed by the path e.g. cmV0dXJudXJsOi9hY2NvdW50'
        required: true
  /api/v1/session/start:
    get:
      summary: Generate Session using Email & Password
      parameters:
        - $ref: '#/components/parameters/languageParam'
        - in: query
          name: emailaddress
          schema:
            type: string
          required: true
          description: The user email address
        - in: query
          name: password
          schema:
            type: string
          required: true
          description: The user password
      responses:
        '200':
          description: |-
            Successful login response.

            At this point please make sure you store the "AuthenticationToken" so you can validate your session when making future API Calls.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  UtcNow:
                    type: number
                  LocationFromIp:
                    type: object
                    properties:
                      Name: {}
                      Country: {}
                      CountryCode:
                        type: string
                        minLength: 1
                      State: {}
                      City: {}
                    required:
                      - CountryCode
                  CurrentCustomerSessionStatus:
                    type: number
                  CurrentCustomerSession:
                    type: object
                    properties:
                      Id:
                        type: string
                        minLength: 1
                      CustomerId:
                        type: string
                        minLength: 1
                      CustomerEmailAddress:
                        type: string
                        minLength: 1
                      CustomerFirstName:
                        type: string
                        minLength: 1
                      CustomerLastName:
                        type: string
                        minLength: 1
                      CustomerBillingProfileCreatedAt: {}
                      CustomerBillingProfileExpiresAt: {}
                      CustomerBillingProfileLastFailedAt: {}
                      CustomerBillingProfileProvider: {}
                      CustomerBillingProfileReference: {}
                      CustomerDeleted:
                        type: boolean
                      CustomerEntitlements:
                        type: string
                      CustomerFullAccessUntil: {}
                      CustomerNonExpiringSubscriptionCount:
                        type: number
                      CustomerSubscriptionCount:
                        type: number
                      RequiresCardAuthenticationCount:
                        type: number
                    required:
                      - Id
                      - CustomerId
                      - CustomerEmailAddress
                      - CustomerFirstName
                      - CustomerLastName
                      - CustomerDeleted
                      - CustomerEntitlements
                      - CustomerNonExpiringSubscriptionCount
                      - CustomerSubscriptionCount
                      - RequiresCardAuthenticationCount
                  ModelErrors:
                    type: object
                    properties: {}
                  AuthenticationToken:
                    type: string
                    minLength: 1
                  PageUrl: {}
                required:
                  - UtcNow
                  - LocationFromIp
                  - CurrentCustomerSessionStatus
                  - CurrentCustomerSession
                  - ModelErrors
                  - AuthenticationToken
                x-examples:
                  example-1:
                    UtcNow: 1592915757873
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQwMDM1NTdDRTVCRDg2ODREODhBMjMyMTExOEUxRTI1M0UyQzg3RDhCMDVBNEUz15B098C6
                      CustomerId: c5d702fb-15f7-499b-90d5-cc36922e2ab2
                      CustomerEmailAddress: customer@email.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerBillingProfileCreatedAt: '2019-07-31T13:22:14.000Z'
                      CustomerBillingProfileExpiresAt: '2022-02-28T23:59:59.000Z'
                      CustomerBillingProfileLastFailedAt: null
                      CustomerBillingProfileProvider: StripeCard
                      CustomerBillingProfileReference: Visa XXXX-XXXX-XXXX-4242
                      CustomerDeleted: false
                      CustomerEntitlements: ''
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 0
                      RequiresCardAuthenticationCount: 0
                    ModelErrors: {}
                    AuthenticationToken: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQwMDM1NTdDRTVCRDg2ODREODhBMjMyMTExOEUxRTI1M0UyQzg3RDhCMDVBNEUz15B098C6
                    PageUrl: null
              examples:
                Successful Login Response:
                  value:
                    UtcNow: 1592915757873
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQwMDM1NTdDRTVCRDg2ODREODhBMjMyMTExOEUxRTI1M0UyQzg3RDhCMDVBNEUz15B098C6
                      CustomerId: c5d702fb-15f7-499b-90d5-cc36922e2ab2
                      CustomerEmailAddress: customer@email.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerBillingProfileCreatedAt: null
                      CustomerBillingProfileExpiresAt: null
                      CustomerBillingProfileLastFailedAt: null
                      CustomerBillingProfileProvider: null
                      CustomerBillingProfileReference: null
                      CustomerDeleted: false
                      CustomerEntitlements: ''
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 0
                      RequiresCardAuthenticationCount: 0
                    ModelErrors: {}
                    AuthenticationToken: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQwMDM1NTdDRTVCRDg2ODREODhBMjMyMTExOEUxRTI1M0UyQzg3RDhCMDVBNEUz15B098C6
                    PageUrl: null
        '204':
          description: The login request processed successfully but there is no response content
        '500':
          description: Unsuccessful login response
          content:
            application/json:
              schema:
                description: ''
                type: object
              examples:
                Failed Login Response:
                  value:
                    ErrorMessage: Invalid Login Request
      description: |-
        In order to perform queries against the CloudPay API a user must first initialise a session. This can be done in multiple ways either via SSO or via Email & Password.

        Once a user has initialised their session by successfully logging in, the "AuthenticationToken" in the response is used as a query parameter across the other API endpoints.
      tags:
        - Session
      operationId: generate-session-email-password
    post:
      operationId: generate-session-payload
      summary: Generate Session using Payload
      parameters:
        - $ref: '#/components/parameters/languageParam'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/StringLoginRequest'
                - $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: |-
            Successful login response.

            At this point please make sure you store the "AuthenticationToken" so you can validate your session when making future API Calls.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  UtcNow:
                    type: number
                  LocationFromIp:
                    type: object
                    properties:
                      Name: {}
                      Country: {}
                      CountryCode:
                        type: string
                        minLength: 1
                      State: {}
                      City: {}
                    required:
                      - CountryCode
                  CurrentCustomerSessionStatus:
                    type: number
                  CurrentCustomerSession:
                    type: object
                    properties:
                      Id:
                        type: string
                        minLength: 1
                      CustomerId:
                        type: string
                        minLength: 1
                      CustomerEmailAddress:
                        type: string
                        minLength: 1
                      CustomerFirstName:
                        type: string
                        minLength: 1
                      CustomerLastName:
                        type: string
                        minLength: 1
                      CustomerBillingProfileCreatedAt: {}
                      CustomerBillingProfileExpiresAt: {}
                      CustomerBillingProfileLastFailedAt: {}
                      CustomerBillingProfileProvider: {}
                      CustomerBillingProfileReference: {}
                      CustomerDeleted:
                        type: boolean
                      CustomerEntitlements:
                        type: string
                      CustomerFullAccessUntil: {}
                      CustomerNonExpiringSubscriptionCount:
                        type: number
                      CustomerSubscriptionCount:
                        type: number
                      RequiresCardAuthenticationCount:
                        type: number
                    required:
                      - Id
                      - CustomerId
                      - CustomerEmailAddress
                      - CustomerFirstName
                      - CustomerLastName
                      - CustomerDeleted
                      - CustomerEntitlements
                      - CustomerNonExpiringSubscriptionCount
                      - CustomerSubscriptionCount
                      - RequiresCardAuthenticationCount
                  ModelErrors:
                    type: object
                    properties: {}
                  AuthenticationToken:
                    type: string
                    minLength: 1
                  PageUrl: {}
                required:
                  - UtcNow
                  - LocationFromIp
                  - CurrentCustomerSessionStatus
                  - CurrentCustomerSession
                  - ModelErrors
                  - AuthenticationToken
                x-examples:
                  example-1:
                    UtcNow: 1592915757873
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQwMDM1NTdDRTVCRDg2ODREODhBMjMyMTExOEUxRTI1M0UyQzg3RDhCMDVBNEUz15B098C6
                      CustomerId: c5d702fb-15f7-499b-90d5-cc36922e2ab2
                      CustomerEmailAddress: customer@email.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerBillingProfileCreatedAt: null
                      CustomerBillingProfileExpiresAt: null
                      CustomerBillingProfileLastFailedAt: null
                      CustomerBillingProfileProvider: null
                      CustomerBillingProfileReference: null
                      CustomerDeleted: false
                      CustomerEntitlements: ''
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 0
                      RequiresCardAuthenticationCount: 0
                    ModelErrors: {}
                    AuthenticationToken: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQwMDM1NTdDRTVCRDg2ODREODhBMjMyMTExOEUxRTI1M0UyQzg3RDhCMDVBNEUz15B098C6
                    PageUrl: null
              examples:
                Successful Login Response:
                  value:
                    UtcNow: 1592915757873
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQwMDM1NTdDRTVCRDg2ODREODhBMjMyMTExOEUxRTI1M0UyQzg3RDhCMDVBNEUz15B098C6
                      CustomerId: c5d702fb-15f7-499b-90d5-cc36922e2ab2
                      CustomerEmailAddress: customer@email.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerBillingProfileCreatedAt: null
                      CustomerBillingProfileExpiresAt: null
                      CustomerBillingProfileLastFailedAt: null
                      CustomerBillingProfileProvider: null
                      CustomerBillingProfileReference: null
                      CustomerDeleted: false
                      CustomerEntitlements: ''
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 0
                      RequiresCardAuthenticationCount: 0
                    ModelErrors: {}
                    AuthenticationToken: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQwMDM1NTdDRTVCRDg2ODREODhBMjMyMTExOEUxRTI1M0UyQzg3RDhCMDVBNEUz15B098C6
                    PageUrl: null
        '204':
          description: The login request processed successfully but there is no response content
        '500':
          description: Unsuccessful login response
          content:
            application/json:
              schema:
                description: ''
                type: object
              examples:
                Failed Cookie Response:
                  value:
                    ErrorMessage: Invalid Login Request
      description: |-
        In order to perform queries against the CloudPay API a user must first initialise a session. This can be done in multiple ways either via SSO or via Email & Password.

        Once a user has initialised their session by successfully logging in, the "AuthenticationToken" in the response is used as a query parameter across the other API endpoints.
      tags:
        - Session
  /api/v1/session/prescence:
    get:
      summary: Validate Active Session
      parameters:
        - $ref: '#/components/parameters/languageParam'
        - $ref: '#/components/parameters/authCookie'
        - $ref: '#/components/parameters/apiSessionIdParam'
        - $ref: '#/components/parameters/apiJwtTokenParam'
        - $ref: '#/components/parameters/thirdPartyAuthCookie'
      responses:
        '200':
          description: Successful presence check response
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  UtcNow:
                    type: number
                  LocationFromIp:
                    type: object
                    properties:
                      Name: {}
                      Country: {}
                      CountryCode:
                        type: string
                        minLength: 1
                      State: {}
                      City: {}
                    required:
                      - CountryCode
                  CurrentCustomerSessionStatus:
                    type: number
                  CurrentCustomerSession:
                    type: object
                    properties:
                      Id:
                        type: string
                        minLength: 1
                      CustomerId:
                        type: string
                        minLength: 1
                      CustomerEmailAddress:
                        type: string
                        minLength: 1
                      CustomerFirstName:
                        type: string
                        minLength: 1
                      CustomerLastName:
                        type: string
                        minLength: 1
                      CustomerBillingProfileCreatedAt: {}
                      CustomerBillingProfileExpiresAt: {}
                      CustomerBillingProfileLastFailedAt: {}
                      CustomerBillingProfileProvider: {}
                      CustomerBillingProfileReference: {}
                      CustomerDeleted:
                        type: boolean
                      CustomerEntitlements:
                        type: string
                      CustomerFullAccessUntil: {}
                      CustomerNonExpiringSubscriptionCount:
                        type: number
                      CustomerSubscriptionCount:
                        type: number
                      RequiresCardAuthenticationCount:
                        type: number
                    required:
                      - Id
                      - CustomerId
                      - CustomerEmailAddress
                      - CustomerFirstName
                      - CustomerLastName
                      - CustomerDeleted
                      - CustomerEntitlements
                      - CustomerNonExpiringSubscriptionCount
                      - CustomerSubscriptionCount
                      - RequiresCardAuthenticationCount
                  ModelErrors:
                    type: object
                    properties: {}
                required:
                  - UtcNow
                  - LocationFromIp
                  - CurrentCustomerSessionStatus
                  - CurrentCustomerSession
                  - ModelErrors
                x-examples:
                  example-1:
                    UtcNow: 1592915271743
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQwMDA2MzkzNjQ3RTA0ODQ3RDhDNTc3NjQyNTc5N0JBRDA3Qjk4RDYwN0Y5RDY29890C879
                      CustomerId: c5d702fb-15f7-499b-90d5-cc36922e2ab2
                      CustomerEmailAddress: customer@email.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerBillingProfileCreatedAt: null
                      CustomerBillingProfileExpiresAt: null
                      CustomerBillingProfileLastFailedAt: null
                      CustomerBillingProfileProvider: null
                      CustomerBillingProfileReference: null
                      CustomerDeleted: false
                      CustomerEntitlements: ''
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 0
                      RequiresCardAuthenticationCount: 0
                    ModelErrors: {}
              examples:
                Successful Presence Check:
                  value:
                    UtcNow: 1592915271743
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQwMDA2MzkzNjQ3RTA0ODQ3RDhDNTc3NjQyNTc5N0JBRDA3Qjk4RDYwN0Y5RDY29890C879
                      CustomerId: c5d702fb-15f7-499b-90d5-cc36922e2ab2
                      CustomerEmailAddress: customer@email.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerBillingProfileCreatedAt: null
                      CustomerBillingProfileExpiresAt: null
                      CustomerBillingProfileLastFailedAt: null
                      CustomerBillingProfileProvider: null
                      CustomerBillingProfileReference: null
                      CustomerDeleted: false
                      CustomerEntitlements: ''
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 0
                      RequiresCardAuthenticationCount: 0
                    ModelErrors: {}
        '204':
          description: The presence check request processed successfully but there is no response content
        '500':
          description: Unsuccessful presence check response
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  UtcNow:
                    type: number
                  LocationFromIp:
                    type: object
                    properties:
                      Name: {}
                      Country: {}
                      CountryCode:
                        type: string
                        minLength: 1
                      State: {}
                      City: {}
                    required:
                      - CountryCode
                  CurrentCustomerSessionStatus:
                    type: number
                  CurrentCustomerSession: {}
                  ModelErrors:
                    type: object
                    properties: {}
                required:
                  - UtcNow
                  - LocationFromIp
                  - CurrentCustomerSessionStatus
                  - ModelErrors
                x-examples:
                  example-1:
                    UtcNow: 1592915370795
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: 0
                    CurrentCustomerSession: null
                    ModelErrors: {}
              examples:
                Unsuccessful Presence Check:
                  value:
                    UtcNow: 1592915370795
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: 0
                    CurrentCustomerSession: null
                    ModelErrors: {}
      description: |-
        The Presence check provides the functionality to validate the activeness of a users session.

        One of the following parameters must be provided to perform the presence check.

        * apisessionid
        * apijwttoken
        * thirdpartyauthentication
      tags:
        - Session
      operationId: validate-active-session
    parameters: []
  '/api/v1/session/setcookie/{authenticationToken}':
    get:
      summary: Set an Authentication Cookie
      parameters:
        - in: path
          name: authenticationToken
          schema:
            type: string
          required: true
          description: The CloudPay Session ID taken from the Login Endpoint
        - schema:
            type: string
          in: query
          name: callbackurl
          description: Redirect Location
      responses:
        '302':
          description: Successful set cookie response
          content:
            application/json:
              schema:
                description: ''
                type: object
              examples:
                Successful Cookie Response:
                  value: {}
          headers:
            Location:
              schema:
                type: string
              description: Redirect URL
            Set-Cookie:
              schema:
                type: string
                example: '.auth=eh2j182jjj2abnwj8m228djj2nJd221d219kdd231s3dlj2c211dds; Path=/; expires=${tomorrow}; SameSite=None; Secure; HttpOnly'
              description: Cookie information that will be persisted
        '500':
          description: Unsuccessful set cookie response
          content:
            application/json:
              schema:
                description: ''
                type: object
              examples:
                Failed Cookie Response:
                  value:
                    ErrorMessage: SetCookieFailed
      description: |-
        Create a cookie with redirection based on the user session Id created on Login.

        This endpoint will respond with the Set-Cookie header which your browser should automatically store in its Cookie store. If you would like to perfrom a redirection alongside the request set the callbackurl query parameters and this URL will be honoured within the Location Response header.
      tags:
        - Session
      operationId: set-authentication-cookie
    parameters:
      - schema:
          type: string
        name: authenticationToken
        in: path
        required: true
        description: The CloudPay Session ID taken from the Login Endpoint
  /api/v1/session/terminate:
    get:
      summary: Terminate a Session
      parameters:
        - $ref: '#/components/parameters/languageParam'
        - $ref: '#/components/parameters/apiJwtTokenParam'
        - $ref: '#/components/parameters/apiSessionIdParam'
        - $ref: '#/components/parameters/thirdPartyAuthCookie'
        - $ref: '#/components/parameters/authCookie'
      responses:
        '200':
          description: Successful session terminate check response
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  UtcNow:
                    type: number
                  LocationFromIp:
                    type: object
                    properties:
                      Name: {}
                      Country: {}
                      CountryCode:
                        type: string
                        minLength: 1
                      State: {}
                      City: {}
                    required:
                      - CountryCode
                  CurrentCustomerSessionStatus:
                    type: number
                  CurrentCustomerSession: {}
                  ModelErrors:
                    type: object
                    properties: {}
                required:
                  - UtcNow
                  - LocationFromIp
                  - CurrentCustomerSessionStatus
                  - ModelErrors
                x-examples:
                  example-1:
                    UtcNow: 1592992573552
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: 0
                    CurrentCustomerSession: null
                    ModelErrors: {}
              examples:
                Succesful Session Termination:
                  value:
                    UtcNow: 1592992573552
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: 0
                    CurrentCustomerSession: null
                    ModelErrors: {}
        '204':
          description: The session terminate request processed successfully but there is no response content
        '500':
          description: Unsuccessful session terminate response
          content:
            application/json:
              schema:
                description: ''
                type: object
              examples:
                Failed Login Response:
                  value:
                    ErrorMessage: Invalid Ternimation Request
      description: The session Termination request should be used to close session once a user has finished making requests against the CloudPay API.
      tags:
        - Session
      operationId: terminate-session
    parameters: []
  /api/v1/session/ksession:
    get:
      summary: Generate a KSession Token
      parameters:
        - $ref: '#/components/parameters/languageParam'
        - $ref: '#/components/parameters/apiJwtTokenParam'
        - $ref: '#/components/parameters/apiSessionIdParam'
        - $ref: '#/components/parameters/thirdPartyAuthCookie'
        - $ref: '#/components/parameters/authCookie'
        - in: query
          name: entryid
          schema:
            type: string
          required: true
          description: The entry id
      responses:
        '200':
          description: |-
            KSession request responses

            **Note: ** *A successful 200 response does not always contain a valid KSession
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    UtcNow: 1592991198112
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQyMTMyNTlGMTRCNUJGQkQ0Mjk5NUNEODZGODhBRjlGQ0IyRjA0NUVCNkU2NUIy0567B255
                      CustomerId: c5d702fb-15f7-499b-90d5-cc36922e2ab2
                      CustomerEmailAddress: customer@email.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerBillingProfileCreatedAt: null
                      CustomerBillingProfileExpiresAt: null
                      CustomerBillingProfileLastFailedAt: null
                      CustomerBillingProfileProvider: null
                      CustomerBillingProfileReference: null
                      CustomerDeleted: false
                      CustomerEntitlements: ''
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 0
                      RequiresCardAuthenticationCount: 0
                    ModelErrors: {}
                    Status: -1
                    KSession: OWE1MGI2NmQ5ZTc2MjA5NjllYzEzY2EzMGFmNzUzNmExOTVkYzdlYXwzMDAxMTkyOzMwMDExOTI7MTU5Mjk5MzQwMDswOzE1OTI5OTI4MDA7Vmlld2VyO3N2aWV3OjBfOHpiNnV3Nngsc2V0cm9sZTpQTEFZQkFDS19CQVNFX1JPTEUsd2lkZ2V0OjE7Ow==
                    ErrorMessage: null
                properties:
                  UtcNow:
                    type: number
                  LocationFromIp:
                    type: object
                    required:
                      - CountryCode
                    properties:
                      Name: {}
                      Country: {}
                      CountryCode:
                        type: string
                        minLength: 1
                      State: {}
                      City: {}
                  CurrentCustomerSessionStatus:
                    type: number
                  CurrentCustomerSession:
                    type: object
                    required:
                      - Id
                      - CustomerId
                      - CustomerEmailAddress
                      - CustomerFirstName
                      - CustomerLastName
                      - CustomerDeleted
                      - CustomerEntitlements
                      - CustomerNonExpiringSubscriptionCount
                      - CustomerSubscriptionCount
                      - RequiresCardAuthenticationCount
                    nullable: true
                    properties:
                      Id:
                        type: string
                        minLength: 1
                      CustomerId:
                        type: string
                        minLength: 1
                      CustomerEmailAddress:
                        type: string
                        minLength: 1
                      CustomerFirstName:
                        type: string
                        minLength: 1
                      CustomerLastName:
                        type: string
                        minLength: 1
                      CustomerBillingProfileCreatedAt: {}
                      CustomerBillingProfileExpiresAt: {}
                      CustomerBillingProfileLastFailedAt: {}
                      CustomerBillingProfileProvider: {}
                      CustomerBillingProfileReference: {}
                      CustomerDeleted:
                        type: boolean
                      CustomerEntitlements:
                        type: string
                      CustomerFullAccessUntil: {}
                      CustomerNonExpiringSubscriptionCount:
                        type: number
                      CustomerSubscriptionCount:
                        type: number
                      RequiresCardAuthenticationCount:
                        type: number
                  ModelErrors:
                    type: object
                  Status:
                    type: number
                  KSession:
                    type: string
                    minLength: 1
                    nullable: true
                  ErrorMessage: {}
                  Resume:
                    type: object
                    nullable: true
                    properties:
                      timestamp:
                        type: number
                required:
                  - UtcNow
                  - LocationFromIp
                  - CurrentCustomerSessionStatus
                  - CurrentCustomerSession
                  - ModelErrors
                  - Status
                  - KSession
              examples:
                Successful KSession Response:
                  value:
                    UtcNow: 1592991198112
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzVkNzAyZmItMTVmNy00OTliLTkwZDUtY2MzNjkyMmUyYWIyMjAyMDA2MjQyMTMyNTlGMTRCNUJGQkQ0Mjk5NUNEODZGODhBRjlGQ0IyRjA0NUVCNkU2NUIy0567B255
                      CustomerId: c5d702fb-15f7-499b-90d5-cc36922e2ab2
                      CustomerEmailAddress: customer@email.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerBillingProfileCreatedAt: null
                      CustomerBillingProfileExpiresAt: null
                      CustomerBillingProfileLastFailedAt: null
                      CustomerBillingProfileProvider: null
                      CustomerBillingProfileReference: null
                      CustomerDeleted: false
                      CustomerEntitlements: ''
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 0
                      RequiresCardAuthenticationCount: 0
                    ModelErrors: {}
                    Status: -1
                    KSession: OWE1MGI2NmQ5ZTc2MjA5NjllYzEzY2EzMGFmNzUzNmExOTVkYzdlYXwzMDAxMTkyOzMwMDExOTI7MTU5Mjk5MzQwMDswOzE1OTI5OTI4MDA7Vmlld2VyO3N2aWV3OjBfOHpiNnV3Nngsc2V0cm9sZTpQTEFZQkFDS19CQVNFX1JPTEUsd2lkZ2V0OjE7Ow==
                    Resume:
                      Timestamp: 30
                    ErrorMessage: null
                Customer has No Subscriptions:
                  value:
                    UtcNow: 1621939672740
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: GB
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzAzZWQ0N2QtOTQzYi00NzM5LTkwMTItZjY0Y2IzMzA2ZWMyMjAyMTA1MjUyMjQ3MTEwODBCMDNBQjI3NjYwOEUzREI1RjgyRURFQjYyRkFBRUE5RUI4Qzg4A436F5D0
                      CustomerId: a312c595-66d5-40c0-9223-277916537936
                      CustomerEmailAddress: lorem@ipson.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerBillingProfileCreatedAt: null
                      CustomerBillingProfileExpiresAt: null
                      CustomerBillingProfileLastFailedAt: null
                      CustomerBillingProfileProvider: null
                      CustomerBillingProfileReference: null
                      CustomerDeleted: false
                      CustomerEntitlements: ''
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 0
                      RequiresCardAuthenticationCount: 0
                      Expiry: null
                    ModelErrors: {}
                    Status: 1
                    KSession: null
                    Resume:
                      Timestamp: 0
                    ErrorMessage: Customer has no subscriptions
                Unable to Retrieve Valid JSON Entitlements:
                  value:
                    UtcNow: 1621939956461
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: GB
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: 0
                    CurrentCustomerSession: null
                    ModelErrors: {}
                    Status: 5
                    KSession: null
                    Resume: null
                    ErrorMessage: Unable to retrieve valid json entitlements
                Too Many Failed Login Attempts:
                  value:
                    UtcNow: 1621941276614
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: GB
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzAzZWQ0N2QtOTQzYi00NzM5LTkwMTItZjY0Y2IzMzA2ZWMyMjAyMTA1MjUyMjQ3MTEwODBCMDNBQjI3NjYwOEUzREI1RjgyRURFQjYyRkFBRUE5RUI4Qzg4A436F5D0
                      CustomerId: a312c595-66d5-40c0-9223-277916537936
                      CustomerEmailAddress: lorem@ipson.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerDeleted: true
                      CustomerEntitlements: pldarts
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 1
                      RequiresCardAuthenticationCount: 0
                      Expiry: 1624619541
                    ModelErrors: {}
                    Status: 3
                    KSession: null
                    Resume:
                      Timestamp: 20
                    ErrorMessage: The customer account is blocked; too may failed login attempts
                Blocked due to Concurrency Limit:
                  value:
                    UtcNow: 1621941276614
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: GB
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: -1
                    CurrentCustomerSession:
                      Id: YzAzZWQ0N2QtOTQzYi00NzM5LTkwMTItZjY0Y2IzMzA2ZWMyMjAyMTA1MjUyMjQ3MTEwODBCMDNBQjI3NjYwOEUzREI1RjgyRURFQjYyRkFBRUE5RUI4Qzg4A436F5D0
                      CustomerId: a312c595-66d5-40c0-9223-277916537936
                      CustomerEmailAddress: lorem@ipson.com
                      CustomerFirstName: Lorem
                      CustomerLastName: Ipsum
                      CustomerDeleted: true
                      CustomerEntitlements: pldarts
                      CustomerFullAccessUntil: null
                      CustomerNonExpiringSubscriptionCount: 0
                      CustomerSubscriptionCount: 1
                      RequiresCardAuthenticationCount: 0
                      Expiry: 1624619541
                    ModelErrors: {}
                    Status: 5
                    KSession: null
                    Resume:
                      Timestamp: 30
                    ErrorMessage: The customer account is blocked due to concurrency limit
        '204':
          description: The KSession token generate request processed successfully but there is no response content
        '500':
          description: Unsuccessful KSession token generate response
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  UtcNow:
                    type: number
                  LocationFromIp:
                    type: object
                    properties:
                      Name: {}
                      Country: {}
                      CountryCode:
                        type: string
                        minLength: 1
                      State: {}
                      City: {}
                    required:
                      - CountryCode
                  CurrentCustomerSessionStatus:
                    type: number
                  CurrentCustomerSession: {}
                  ModelErrors:
                    type: object
                    properties: {}
                  Status:
                    type: number
                  KSession: {}
                  ErrorMessage:
                    type: string
                    minLength: 1
                required:
                  - UtcNow
                  - LocationFromIp
                  - CurrentCustomerSessionStatus
                  - ModelErrors
                  - Status
                  - ErrorMessage
                x-examples:
                  example-1:
                    UtcNow: 1592991127798
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: 0
                    CurrentCustomerSession: null
                    ModelErrors: {}
                    Status: 0
                    KSession: null
                    ErrorMessage: 'Customer not authenticated, user must be authenticated to play video'
              examples:
                Not Authorised:
                  value:
                    UtcNow: 1592991127798
                    LocationFromIp:
                      Name: null
                      Country: null
                      CountryCode: MT
                      State: null
                      City: null
                    CurrentCustomerSessionStatus: 0
                    CurrentCustomerSession: null
                    ModelErrors: {}
                    Status: 0
                    KSession: null
                    ErrorMessage: 'Customer not authenticated, user must be authenticated to play video'
      description: |-
        In order to access media content a kSession must be provided to authorise a user to gain access.

        Once a user has created a valid session they can request the generation of a kSession for a given entry.

        A client should store the kSession token to use against the retrival of media content.
      tags:
        - Session
      operationId: generate-ksession
    parameters: []
  /js/stream-payments.js:
    get:
      summary: Stream Payments Client JS Script
      parameters:
        - $ref: '#/components/parameters/minifiedParam'
      responses:
        '204':
          description: The get streamPayment script request processed successfully but there is no response content
        '302':
          description: Successful get streamPayment script response
        '500':
          description: Unsuccessful get streamPayment script response
          content:
            application/json:
              schema:
                description: ''
                type: object
              examples:
                Bad Request:
                  value:
                    ErrorMessage: Could not retrieve payments script
      description: Load in the site specific stream payments JS library
      tags:
        - Scripts
      operationId: stream-payments-script
  '/js/{version}/stream-payments.js':
    get:
      summary: Versioned Stream Payments Client JS Script
      parameters:
        - in: path
          name: version
          schema:
            type: string
          required: true
          description: The streamPayment script version required
        - $ref: '#/components/parameters/minifiedParam'
      responses:
        '200':
          description: Successful get versioned streamPayment script response
        '204':
          description: The get versioned streamPayment script request processed successfully but there is no response content
        '500':
          description: Unsuccessful get streamPayment script response
          content:
            application/json:
              schema:
                description: ''
                type: object
              examples:
                Bad Request:
                  value:
                    ErrorMessage: Could not load payments scripts
      description: Load in the versioned site specific stream payments JS library
      tags:
        - Scripts
      operationId: stream-payments-v-script
  /api/v1/account/cancellation:
    post:
      operationId: post-api-v1-account-cancellation
      summary: Cancel Subscription
      parameters:
        - $ref: '#/components/parameters/apiJwtTokenParam'
        - $ref: '#/components/parameters/apiSessionIdParam'
        - $ref: '#/components/parameters/thirdPartyAuthCookie'
        - $ref: '#/components/parameters/authCookie'
      tags:
        - Account
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: |-
        <!--
        focus: false
        -->

        ![In Development](https://img.shields.io/badge/Status-In%20Development-green?style=flat-square)

        The Account Cancellation API endpoint exposes the functionality for a user to cancel a subscription plan using the customers subscription identifier.

        This endpoint will only allow a user with a valid session token to cancel their own subscriptions.

        **Note** *Only one of the four authorisation parameters are required*
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                customerSubscriptionId:
                  type: string
                  format: uuid
                reason:
                  type: string
                  description: Description of why the cancellation is happening
                sendEmail:
                  type: boolean
                  description: This will send a client a email once the cancellation process has complete
                  default: false
                immediate:
                  type: boolean
                  description: Should the cancellation happen instantly or at the end of the next payment
                  default: false
              required:
                - customerSubscriptionId
                - reason
            examples:
              Cancellation Request:
                value:
                  customerSubscriptionId: f9237e26-8094-412b-923d-7e23070ec937
                  reason: Invalid Account Balance
                  sendEmail: false
                  immediate: false
        description: Given a client has access to the customer subscription ID the cancellation request can be generated.
  /api/v1/account:
    get:
      operationId: get-api-v1-account
      summary: Retrieve the User's Summary
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/languageParam'
        - $ref: '#/components/parameters/apiJwtTokenParam'
        - $ref: '#/components/parameters/apiSessionIdParam'
        - $ref: '#/components/parameters/thirdPartyAuthCookie'
        - $ref: '#/components/parameters/authCookie'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Customer account details
                properties:
                  EmailAddress:
                    type: string
                    minLength: 1
                    readOnly: true
                  FirstName:
                    type: string
                    minLength: 1
                  LastName:
                    type: string
                    minLength: 1
                  CustomFields:
                    $ref: '#/components/schemas/AccountCustomFieldsModelGet'
                  BillingDetails:
                    $ref: '#/components/schemas/AccountBillingDetailsModelGet'
                  Subscriptions:
                    $ref: '#/components/schemas/AccountSubscriptionsModelGet'
                required:
                  - EmailAddress
                  - FirstName
                  - LastName
              examples:
                Response with all user details:
                  $ref: '#/components/examples/AccountResponseGetFullExample'
                Response with custom fields but without billing profile:
                  $ref: '#/components/examples/AccountResponseGetCustomFieldsExample'
                Response only with card details:
                  $ref: '#/components/examples/AccountResponseGetCardDetailsExample'
                Response with basic details:
                  $ref: '#/components/examples/AccountResponseGetBasicExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: |
        <!--
        focus: false
        -->
        ![In Development](https://img.shields.io/badge/Status-In%20Development-green?style=flat-square)

        The Account Endpoint returns an account summary of the Authenticated User.

        **Note** *Only one of the four authorisation parameters are required*
    parameters: []
    patch:
      summary: Update the User's Summary
      operationId: put-api-v1-account
      parameters:
        - $ref: '#/components/parameters/apiJwtTokenParam'
        - $ref: '#/components/parameters/apiSessionIdParam'
        - $ref: '#/components/parameters/thirdPartyAuthCookie'
        - $ref: '#/components/parameters/authCookie'
      tags:
        - Account
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                description: User account put response
                type: object
                x-examples:
                  example-1:
                    $ref: '#/components/examples/AccountResponseGetFullExample'
                properties:
                  EmailAddress:
                    type: string
                    minLength: 1
                    readOnly: true
                  FirstName:
                    type: string
                    minLength: 1
                  LastName:
                    type: string
                    minLength: 1
                  CustomFields:
                    $ref: '#/components/schemas/AccountCustomFieldsModelGet'
                  BillingDetails:
                    $ref: '#/components/schemas/AccountBillingDetailsModelGet'
                required:
                  - EmailAddress
                  - FirstName
                  - LastName
              examples:
                Response with all user details:
                  $ref: '#/components/examples/AccountResponseGetFullExample'
                Response with custom fields but without billing profile:
                  $ref: '#/components/examples/AccountResponseGetCustomFieldsExample'
                Response only with card details:
                  $ref: '#/components/examples/AccountResponseGetCardDetailsExample'
                Response with basic details:
                  $ref: '#/components/examples/AccountResponseGetBasicExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: |-
        <!--
        focus: false
        -->

        ![In Review](https://img.shields.io/badge/Status-In%20Review-green?style=flat-square)

        The update Account endpoint allows a user to update their user details.

        Please be aware that the users email can not be updated via the API.


        **Note** *Only one of the four authorisation parameters are required*
      requestBody:
        content:
          application/json:
            schema:
              description: User put request
              type: object
              x-examples:
                example-1:
                  $ref: '#/components/examples/AccountPatchFirstNameExample'
              properties:
                FirstName:
                  type: string
                  minLength: 1
                LastName:
                  type: string
                  minLength: 1
                CustomFields:
                  $ref: '#/components/schemas/AccountCustomFieldsModelUpdate'
            examples:
              Update User First Name:
                $ref: '#/components/examples/AccountPatchFirstNameExample'
              Update User Last Name:
                $ref: '#/components/examples/AccountPatchLastNameExample'
              Update Custom fields:
                $ref: '#/components/examples/AccountPatchCustomFieldsExample'
  /api/v1/account/transactions:
    get:
      operationId: get-api-v1-account-transactions
      summary: Retrieve the User's transactions
      tags:
        - Account
      parameters:
        - $ref: '#/components/parameters/apiJwtTokenParam'
        - $ref: '#/components/parameters/apiSessionIdParam'
        - $ref: '#/components/parameters/thirdPartyAuthCookie'
        - $ref: '#/components/parameters/authCookie'
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The current page
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            default: 100
          description: The number of transactions per page
        - in: query
          name: order
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          description: A sort order by created date
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: An User successful transactions listed in pages and ordered by creation timestamp
                type: object
                properties:
                  page:
                    type: integer
                    minimum: 1
                    default: 1
                    description: The current page
                  size:
                    type: integer
                    minimum: 1
                    maximum: 100
                    default: 100
                    description: The number of transactions per page
                  sort:
                    type: string
                    enum:
                      - asc
                      - desc
                    default: desc
                    description: A sort order by created date
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        CreatedAt:
                          type: string
                          format: date-time
                          description: A transaction created date.
                        Description:
                          type: string
                          minLength: 1
                          description: A subscription plan name.
                        Provider:
                          type: string
                          enum:
                            - StripeCard
                            - PayPal
                          description: A payment provider lile StripeCard or PayPal.
                        Reference:
                          type: string
                          minLength: 1
                          description: A payment provider reference.
                        CurrencyCode:
                          type: string
                          pattern: '^[A-Z]{3}$'
                          description: A three letter currency code.
                        Amount:
                          type: number
                          format: double
                          description: A transaction amount. A positive for a payment and negative for a refund.
                      required:
                        - CreatedAt
                        - Description
                        - Provider
                        - Reference
                        - CurrencyCode
                        - Amount
                    maxItems: 100
                x-examples:
                  example-1:
                    page: 1
                    size: 100
                    order: desc
                    transactions:
                      - CreatedAt: '2020-03-24T17:32:28Z'
                        Description: SCA Weekly Pass  24 Mar 2020 to 31 Mar 2020
                        Provider: PayPal
                        Reference: customer@gmail.com
                        CurrencyCode: EUR
                        Amount: -0.99
                      - CreatedAt: '2020-03-17T17:32:28Z'
                        Description: SCA Daily Pass 17 Mar 2020 to 18 Mar 2020
                        Provider: StripeCard
                        Reference: visa XXXX-XXXX-XXXX-4242
                        CurrencyCode: GBP
                        Amount: 1.99
                  example-2:
                    page: 1
                    size: 100
                    order: desc
                    transactions: []
              examples:
                Successful Query Response:
                  value:
                    page: 1
                    size: 100
                    order: desc
                    transactions:
                      - CreatedAt: '2020-03-24T17:32:28Z'
                        Description: SCA Weekly Pass  24 Mar 2020 to 31 Mar 2020
                        Provider: PayPal
                        Reference: customer@gmail.com
                        CurrencyCode: EUR
                        Amount: -0.99
                      - CreatedAt: '2020-03-17T17:32:28Z'
                        Description: SCA Daily Pass 17 Mar 2020 to 18 Mar 2020
                        Provider: StripeCard
                        Reference: visa XXXX-XXXX-XXXX-4242
                        CurrencyCode: GBP
                        Amount: 1.99
                Empty Query Response:
                  value:
                    page: 1
                    size: 100
                    order: desc
                    transactions: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: |
        <!--
        focus: false
        -->

        ![In Review](https://img.shields.io/badge/Status-In%20Review-green?style=flat-square)

        The account endpoint returns transactions of the authenticated user.

        **Note** *Only one of the four authorisation parameters are required*
  /iap/verify:
    post:
      summary: Verify In-App-Purchase
      tags:
        - IAP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                  isVerified:
                    type: boolean
                required:
                  - status
                  - isVerified
              examples:
                sucess-example:
                  value:
                    status: 200
                    isVerified: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    status: 400
                    error:
                      sourceErrorCode: 21005
                      message: The receipt server is not currently available.
                properties:
                  status:
                    type: number
                  body:
                    type: object
                    required:
                      - sourceErrorCode
                      - errorMessage
                    properties:
                      sourceErrorCode:
                        type: number
                      errorMessage:
                        type: string
                        minLength: 1
                required:
                  - status
                  - body
              examples:
                error-from-provider-example:
                  value:
                    status: 400
                    body:
                      sourceErrorCode: 21005
                      errorMessage: The receipt server is not currently available.
            application/xml:
              schema:
                type: object
                properties: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                  body:
                    type: object
                    required:
                      - errorMessage
                    properties:
                      errorMessage:
                        type: string
                required:
                  - status
                  - body
              examples:
                error-example:
                  value:
                    status: 500
                    body:
                      errorMessage: Internal server error
      operationId: post-iap-verifyReceipt
      description: |-
        <!--
        focus: false
        -->

        ![In Review](https://img.shields.io/badge/Status-In%20Review-green?style=flat-square)

        The verify endpoint validates the in-app purchase with the provider, such as, Apple, Android, Roku; so that we can ascertain legitimacy of the purchase and avoid purchase frauds.

        **Note:** Only one of the four authorisation parameters are required
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                receipt:
                  type: object
                  properties:
                    purchaseIdentifier:
                      type: string
                    packageName:
                      type: string
                    productId:
                      type: string
                    autoRenewing:
                      type: boolean
                    userId:
                      type: string
                    raw:
                      type: string
                      format: base64
                platform:
                  type: string
                  enum:
                    - ios
                    - android
                    - roku
                    - amazon
              required:
                - receipt
                - platform
            examples:
              ios-example:
                value:
                  receipt:
                    raw: bmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXA=
                  platform: ios
              android-example:
                value:
                  receipt:
                    purchaseIdentifier: a-purchase-token-123
                    packageName: a-package-name
                    productId: a-product-id-456
                    autoRenewing: true
                  platform: android
              roku-example:
                value:
                  receipt:
                    purchaseIdentifier: shdbfhgdsvfdv1234
                  platform: roku
              amazon-example:
                value:
                  receipt:
                    purchaseIdentifier: lkjhgfdsapoiuytrewq1234
                    userId: a-amazon-userId
                  platform: amazon
        description: ''
      parameters:
        - $ref: '#/components/parameters/apiJwtTokenParam'
        - $ref: '#/components/parameters/apiSessionIdParam'
        - $ref: '#/components/parameters/authCookie'
        - $ref: '#/components/parameters/thirdPartyAuthCookie'
    parameters: []
  /api/v1/package:
    get:
      summary: Retrieve a List of Packages
      tags:
        - Packages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    SubscriptionPlanOptions:
                      - Id: 82fa21ed-6e23-469f-b802-4e2a67679c54
                        Title: Rest of the world - Monthly Subscription
                        Body: '<p class="package-body">Full Coverage of TV tournaments, Players Championships &amp; European Tour events, interviews and archive content</p><ul><li>European Tour Streaming</li><li>Players Championship Streaming</li><li>TV Events (Live)</li><li>TV Events (Highlights)</li><li>Archive &amp; Feature Content</li><li>Access to the PDC Newsletter</li><li>Partner discounts</li></ul>'
                        Style: null
                        Amount: 9.99
                        Currency: GBP
                        AmountFormatted: £9.99
                        HasFreeTrial: false
                        TrialDuration: null
                        PurchaseUrl: 'https://payments.streamamg.com/sso/startbasket/82fa21ed-6e23-469f-b802-4e2a67679c54?apijwttoken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c&lang=en'
                        Interval: 1months
                        Duration: 1months
                        IAPData: []
                        Metadata:
                          - Name: packageType
                            Code: packageTypeCode
                            Value: video
                      - Id: 8488ee27-e87b-451b-bca8-abe4edea5be9
                        Title: Rest of the world - Monthly Subscription
                        Body: '<p class="package-body">Full Coverage of TV tournaments, Players Championships &amp; European Tour events, interviews and archive content</p><ul><li>European Tour Streaming</li><li>Players Championship Streaming</li><li>TV Events (Live)</li><li>TV Events (Highlights)</li><li>Archive &amp; Feature Content</li><li>Access to the PDC Newsletter</li><li>Partner discounts</li></ul>'
                        Style: null
                        Amount: 59.99
                        Currency: GBP
                        AmountFormatted: £59.99
                        HasFreeTrial: false
                        TrialDuration: null
                        PurchaseUrl: 'https://payments.streamamg.com/sso/startbasket/8488ee27-e87b-451b-bca8-abe4edea5be9?apijwttoken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c&lang=en'
                        Interval: 12months
                        Duration: null
                        IAPData:
                          - Platform: Amazon
                            ProductID: nryearly
                          - Platform: Apple
                            ProductID: nryearly
                          - Platform: Google
                            ProductID: nryearly
                          - Platform: Roku
                            ProductID: nryearly
                      - Id: 783da5fe-52bd-4e97-a88f-2383886b2e44
                        Title: Rest of the world - Weekend Pass
                        Body: '<p class="package-body">Full Coverage of TV tournaments, Players Championships &amp; European Tour events, interviews and archive content</p><ul><li>European Tour Streaming</li><li>Players Championship Streaming</li><li>TV Events (Live)</li><li>TV Events (Highlights)</li><li>Archive &amp; Feature Content</li><li>Access to the PDC Newsletter</li><li>Partner discounts</li></ul>'
                        Style: null
                        Amount: 2.99
                        Currency: GBP
                        AmountFormatted: £2.99
                        HasFreeTrial: true
                        TrialDuration: 2days
                        PurchaseUrl: 'https://payments.streamamg.com/sso/startbasket/783da5fe-52bd-4e97-a88f-2383886b2e44?apijwttoken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c&lang=en'
                        Interval: 2days
                        Duration: null
                        IAPData: []
                properties:
                  SubscriptionPlanOptions:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    items:
                      type: object
                      properties:
                        Id:
                          type: string
                          format: uuid
                          minLength: 1
                          readOnly: true
                        Title:
                          type: string
                          description: If has a free trial shows the subscription plan free trial listing title otherwise the subscription plan listing title.
                          minLength: 1
                          readOnly: true
                        Body:
                          type: string
                          description: If has a free trial shows the subscription plan free trial listing body otherwise the subscription plan listing body.
                          minLength: 1
                          readOnly: true
                        Style:
                          type: string
                          description: If has a free trial shows the subscription plan free trial listing css class otherwise the subscription plan listing css class.
                          nullable: true
                          readOnly: true
                        Amount:
                          type: number
                          description: A subscription plan price amount.
                        Currency:
                          type: string
                          pattern: '^[A-Z]{3}$'
                          description: A three letter currency code from subscription plan price.
                          readOnly: true
                        AmountFormatted:
                          type: string
                          minLength: 1
                          description: A formatted amount including the currency symbol for a currency code.
                          readOnly: true
                        HasFreeTrial:
                          type: boolean
                          description: Shows that subscription plan has a free trial. This property depends of Trial Duration property.
                          readOnly: true
                        TrialDuration:
                          type: string
                          description: Shows a trial duration of subscription plan if available.
                          nullable: true
                          readOnly: true
                        PurchaseUrl:
                          type: string
                          minLength: 1
                          description: 'A purchase URL depends of any JWT Authentication Provider. If any customer JWT token or API session ID is provided, it is attached to the URL.'
                          readOnly: true
                        Interval:
                          type: string
                          minLength: 1
                          description: The subscription plan contract length.
                          readOnly: true
                        Duration:
                          type: string
                          minLength: 1
                          description: The subscription plan auto renew period.
                          nullable: true
                          readOnly: true
                        IAPData:
                          type: array
                          uniqueItems: true
                          minItems: 0
                          items:
                            type: object
                            properties:
                              Platform:
                                type: string
                                enum:
                                  - Apple
                                  - Google
                                  - Amazon
                                  - Roku
                                description: 'The IAP platform provider - Apple, Google, Amazon, Roku.'
                                readOnly: true
                              ProductID:
                                type: string
                                description: The IAP product identifier.
                                readOnly: true
                            required:
                              - Platform
                              - ProductID
                        Metadata:
                          type: array
                          uniqueItems: true
                          minItems: 0
                          items:
                            type: object
                            properties:
                              Name:
                                type: string
                                description: The description of the custom metadata field
                                readOnly: true
                              Code:
                                type: string
                                description: The code identifier of the metadata field
                                readOnly: true
                              Value:
                                type: string
                                description: The value of the custom metadata
                                readOnly: true
                            required:
                              - Name
                              - Code
                              - Value
                      required:
                        - Id
                        - Title
                        - Body
                        - Amount
                        - Currency
                        - AmountFormatted
                        - HasFreeTrial
                        - PurchaseUrl
                        - Interval
                        - IAPData
                        - Metadata
                required:
                  - SubscriptionPlanOptions
              examples:
                List of Packages:
                  value:
                    SubscriptionPlanOptions:
                      - Id: 82fa21ed-6e23-469f-b802-4e2a67679c54
                        Title: Rest of the world - Monthly Subscription
                        Body: '<p class="package-body">Full Coverage of TV tournaments, Players Championships &amp; European Tour events, interviews and archive content</p><ul><li>European Tour Streaming</li><li>Players Championship Streaming</li><li>TV Events (Live)</li><li>TV Events (Highlights)</li><li>Archive &amp; Feature Content</li><li>Access to the PDC Newsletter</li><li>Partner discounts</li></ul>'
                        Style: null
                        Amount: 9.99
                        Currency: GBP
                        AmountFormatted: £9.99
                        HasFreeTrial: false
                        TrialDuration: null
                        PurchaseUrl: 'https://payments.streamamg.com/sso/startbasket/82fa21ed-6e23-469f-b802-4e2a67679c54?apijwttoken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c&lang=en'
                        Interval: 1months
                        Duration: 1months
                        IAPData: []
                        Metadata:
                          - Name: packageType
                            Code: packageTypeCode
                            Value: video
                      - Id: 8488ee27-e87b-451b-bca8-abe4edea5be9
                        Title: Rest of the world - Monthly Subscription
                        Body: '<p class="package-body">Full Coverage of TV tournaments, Players Championships &amp; European Tour events, interviews and archive content</p><ul><li>European Tour Streaming</li><li>Players Championship Streaming</li><li>TV Events (Live)</li><li>TV Events (Highlights)</li><li>Archive &amp; Feature Content</li><li>Access to the PDC Newsletter</li><li>Partner discounts</li></ul>'
                        Style: null
                        Amount: 59.99
                        Currency: GBP
                        AmountFormatted: £59.99
                        HasFreeTrial: false
                        TrialDuration: null
                        PurchaseUrl: 'https://payments.streamamg.com/sso/startbasket/8488ee27-e87b-451b-bca8-abe4edea5be9?apijwttoken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c&lang=en'
                        Interval: 12months
                        Duration: null
                        IAPData:
                          - Platform: Amazon
                            ProductID: nryearly
                          - Platform: Apple
                            ProductID: nryearly
                          - Platform: Google
                            ProductID: nryearly
                          - Platform: Roku
                            ProductID: nryearly
                        Metadata: []
                      - Id: 783da5fe-52bd-4e97-a88f-2383886b2e44
                        Title: Rest of the world - Weekend Pass
                        Body: '<p class="package-body">Full Coverage of TV tournaments, Players Championships &amp; European Tour events, interviews and archive content</p><ul><li>European Tour Streaming</li><li>Players Championship Streaming</li><li>TV Events (Live)</li><li>TV Events (Highlights)</li><li>Archive &amp; Feature Content</li><li>Access to the PDC Newsletter</li><li>Partner discounts</li></ul>'
                        Style: null
                        Amount: 2.99
                        Currency: GBP
                        AmountFormatted: £2.99
                        HasFreeTrial: true
                        TrialDuration: 2days
                        PurchaseUrl: 'https://payments.streamamg.com/sso/startbasket/783da5fe-52bd-4e97-a88f-2383886b2e44?apijwttoken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c&lang=en'
                        Interval: 2days
                        Duration: null
                        IAPData: []
                        Metadata: []
      operationId: get-api-v1-package
      description: |-
        <!--
        focus: false
        -->

        ![Legacy](https://img.shields.io/static/v1?label=Implementation&message=Legacy&color=orange&style=flat-square)

        The Package collection endpoint returns a list of Subscription Plans for a platform.

        This list can be used to produce a custom package list webpage using predefined metadata for the package.

        **Note:** 
         * *The embedded PurchaseUrl is dynamic based on the authorisation mechanism specified*
         * *By default the Package List endpoint will not return IAP packages, the 'type' query parameter must be passed to the API with the value of 'iap' to return only the IAP Packages.*
      parameters:
        - schema:
            type: string
          in: query
          name: lang
          required: false
          description: The language code
        - schema:
            type: string
            enum:
              - iap
          in: query
          name: type
          required: false
          description: The type of subscription plan
        - schema:
            type: string
          in: query
          name: apijwttoken
          required: false
          description: In the instance of a client using SSO the purchase URL will be pointed at the StartBasket endpoint
        - schema:
            type: string
          in: query
          name: apisessionid
          required: false
          description: When SSO is not active the purchase URL is pointed at the RegisterCreateAccount webpage
  '/sso/startbasket/{subscriptionPlanId}':
    get:
      summary: Navigate to Checkout Page
      tags:
        - SSO
      parameters:
        - $ref: '#/components/parameters/apiJwtTokenParam'
        - $ref: '#/components/parameters/apiSessionIdParam'
        - $ref: '#/components/parameters/thirdPartyAuthCookie'
        - schema:
            type: string
          name: success_url
          required: false
          description: A base64 encoded URL to be redirected to after purchase
          in: query
      responses:
        '200':
          description: '![Checkout Page](../../../../assets/images/cloudpay-sso-checkout-example.png)'
      operationId: get-sso-startbasket
      description: |-
        Redirect the client to the CloudPay checkout page with prepopulated fields for the selected package.

        This endpoint should only be used for SSO Integrations, the package list endpoint will return back this route using the **PurchaseUrl** in the response body.

        **Note:** Only one of the three authorisation parameters are required
    parameters:
      - schema:
          type: string
        name: subscriptionPlanId
        in: path
        required: true
        description: The Subscription Plan ID you would like to purchase
  /api/v1/user/entries:
    parameters: []
    get:
      summary: Get user entries with timestamps
      tags:
        - Resume
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    entries:
                      - entryId: 0_abcdwxyz
                        timestamp: 30
                      - entryId: 0_xyxyxyxy
                        timestamp: 7
                      - entryId: 0_rdrdrdrd
                        timestamp: 56
                properties:
                  entries:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    items:
                      type: object
                      properties:
                        entryId:
                          type: string
                          minLength: 1
                        timestamp:
                          type: number
                          minimum: 0
                          description: Denotes how far the video viewing was progressed
                        lastViewedAt:
                          type: string
                          description: The date and time when entry was viewed the last time
                      required:
                        - entryId
                        - timestamp
              examples:
                User entries found:
                  value:
                    entries:
                      - entryId: 0_abcdwxyz
                        timestamp: 30
                        lastViewedAt: '2021-06-28T13:14:20'
                      - entryId: 0_xyxyxyxy
                        timestamp: 7
                        lastViewedAt: '2021-06-27T13:14:20'
                      - entryId: 0_rdrdrdrd
                        timestamp: 56
                        lastViewedAt: '2021-05-27T13:14:20'
                User entries not found:
                  value:
                    entries: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    responseCode: 404
                    message: ''
                properties:
                  statusCode:
                    type: number
                  message:
                    type: string
                    minLength: 1
                required:
                  - statusCode
                  - message
              examples:
                Bad request:
                  value:
                    statusCode: 400
                    message: Bad request
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    responseCode: 404
                    message: User not found
                properties:
                  statusCode:
                    type: number
                  message:
                    type: string
                    minLength: 1
                required:
                  - statusCode
                  - message
              examples:
                User not found:
                  value:
                    statusCode: 404
                    message: User not found
      operationId: get-user-userId-entries
      description: |-
        The endpoint returns video entries watched by the user along with their last watched timestamp.

        **Note** Only one of the four authorisation parameters are required
      parameters:
        - schema:
            type: string
          in: query
          description: the JWT Token used for Authorisation
          name: apijwttoken
        - schema:
            type: string
          in: query
          name: apisessionid
          description: the CloudPay Session used for Authorisation
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: order
          description: A sort order by entry view date
        - schema:
            type: integer
            minimum: 1
            default: 1
          in: query
          description: The current page
          name: page
        - schema:
            type: integer
            minimum: 1
            default: 10
          in: query
          description: The number of entries per page
          name: size
        - schema:
            type: string
          in: cookie
          name: . auth
          description: The authentication cookie header
        - schema:
            type: string
          in: cookie
          name: thirdpartyauthentication
          description: The authentication Cookie
components:
  parameters:
    languageParam:
      in: query
      name: lang
      schema:
        type: string
      required: false
      description: The language code
    apiJwtTokenParam:
      in: query
      name: apijwttoken
      schema:
        type: string
      required: false
      description: the JWT Token used for Authorisation
    apiSessionIdParam:
      in: query
      name: apisessionid
      schema:
        type: string
      required: false
      description: the CloudPay Session used for Authorisation
    minifiedParam:
      in: query
      name: minified
      schema:
        type: string
      description: Specifies if minified script is requested
      required: false
    thirdPartyAuthCookie:
      in: cookie
      name: thirdpartyauthentication
      schema:
        type: string
      required: false
      description: The authentication Cookie
    authCookie:
      in: cookie
      name: .auth
      schema:
        type: string
      required: false
      description: The authentication cookie header
  schemas:
    LoginRequest:
      type: object
      properties:
        emailaddress:
          type: string
        password:
          type: string
      required:
        - emailaddress
        - password
      title: Login Request
      x-internal: true
      description: Login Request using Payload Body
    StringLoginRequest:
      type: string
      example: 'emailaddress: foo@bar.com, password: somePass'
      x-internal: true
      x-examples:
        String Login Request:
          value: 'emailaddress: foo@bar.com, password: somePass'
      title: String Login Request
      description: Login using a string based request
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: number
        body:
          type: object
          properties:
            status:
              type: string
              minLength: 1
            message:
              type: string
              minLength: 1
    AccountCustomFieldsModelGet:
      type: array
      uniqueItems: true
      minItems: 0
      items:
        type: object
        additionalProperties: false
        properties:
          Id:
            type: string
            format: uuid
            description: A unique identifier of custom field
          Label:
            type: string
            minLength: 1
            description: Language depends custom field label
          Required:
            type: boolean
            default: false
            description: A required custom field
            readOnly: true
          Value:
            type: string
            description: Represends a user free text or unique identifier of selected custom field option
            nullable: true
        required:
          - Id
          - Label
          - Required
    AccountCustomFieldsModelUpdate:
      type: array
      uniqueItems: true
      minItems: 0
      items:
        type: object
        additionalProperties: false
        properties:
          Id:
            type: string
            format: uuid
            description: A unique identifier of custom field
          Label:
            type: string
            minLength: 1
            description: Language depends custom field label
          Required:
            type: boolean
            default: false
            readOnly: true
            description: A required custom field
          Value:
            type: string
            nullable: true
            description: Represends a user free text or unique identifier of selected custom field option
        required:
          - Id
          - Label
          - Required
    AccountBillingDetailsModelGet:
      description: User billing address and card details
      type: object
      nullable: true
      properties:
        AddressCountry:
          type: string
          description: A user billing profile country code
        AddressCity:
          type: string
          description: A user billing profile city
        AddressLine1:
          type: string
          description: A user billing address line 1
        AddressLine2:
          type: string
          description: A user billing address line 2
        AddressState:
          type: string
          description: A user billing address region or state
        AddressZip:
          type: string
          description: A user billing address zip code
        CardDetails:
          type: object
          properties:
            Provider:
              type: string
              enum:
                - StripeCard
                - PayPal
              readOnly: true
              description: A user billing provider - StripeCard or PayPal
            Reference:
              type: string
              readOnly: true
              description: A card reference for Stripe or email address for PayPal users
            Country:
              type: string
              readOnly: true
              description: A user card country code
            Expires:
              type: string
              format: date-time
              readOnly: true
              description: A user card expires datetimestamp
              nullable: true
    AccountSubscriptionPlanModel:
      description: Subscription plan details
      type: object
      properties:
        Id:
          type: string
          format: uuid
          minLength: 1
          readOnly: true
        Name:
          type: string
          minLength: 1
          readOnly: true
        Title:
          type: string
          minLength: 1
          readOnly: true
        Description:
          type: string
          minLength: 1
          readOnly: true
        Type:
          type: string
          enum:
            - recurring
            - non-recurring
          readOnly: true
        Amount:
          type: number
          format: double
          readOnly: true
        CurrencyCode:
          type: string
          minLength: 3
          maxLength: 3
          readOnly: true
        HasFreeTrial:
          type: boolean
          readOnly: true
        TrialDuration:
          type: string
          minLength: 1
          readOnly: true
        Interval:
          type: string
          minLength: 1
          readOnly: true
        Duration:
          type: string
          minLength: 1
          readOnly: true
      required:
        - Id
        - Name
        - Title
        - Description
        - Type
        - Amount
        - CurrencyCode
        - Interval
        - Duration
    AccountSubscriptionsModelGet:
      description: List of active subscriptions for an authenticated user
      type: array
      uniqueItems: true
      minItems: 0
      items:
        type: object
        properties:
          Id:
            type: string
            format: uuid
            minLength: 1
            readOnly: true
          Status:
            type: string
            description: 'Status lists subscriptions that are active or cancelled. Cancelled status only applies to recurring subscriptions. It reflects the situation where the user cancelled the subscription, but will keep access to the content until expiry date.'
            enum:
              - active
              - cancelled
            readOnly: true
          ExpiryDate:
            type: string
            format: date-time
            readOnly: true
          RenewalDate:
            type: string
            format: date-time
            readOnly: true
          IsIAP:
            type: boolean
            readOnly: true
          Package:
            $ref: '#/components/schemas/AccountSubscriptionPlanModel'
        required:
          - Id
          - Status
          - IsIAP
  examples:
    AccountResponseGetFullExample:
      value:
        EmailAddress: customer@email.com
        FirstName: Lorem
        LastName: Ipsum
        CustomFields:
          - Id: 2b31e959-c540-4d39-ba76-5e6ef59df772
            Label: Date of Birth
            Required: true
            Value: '1988-08-19'
          - Id: 3a3e6d19-44c8-4882-8899-fa923f1214e9
            Label: Favourite Football Team
            Required: false
            Value: null
        BillingDetails:
          AddressCountry: GB
          AddressCity: Manchester
          AddressLine1: Tomorrow Building
          AddressLine2: MediaCityUK
          AddressState: Salford
          AddressZip: M50 2AB
          CardDetails:
            Provider: StripeCard
            Reference: visa XXXX-XXXX-XXXX-4242
            Country: GB
            Expires: '2024-07-21T17:32:28Z'
        Subscriptions:
          - Id: 57ea90b2-822c-4bc1-946f-88be4c53d9dc
            Status: active
            ExpiryDate: '2022-04-02T17:32:28Z'
            IsIAP: true
            Package:
              Id: 734fe964-841e-48c7-802d-dd21e2d9c2de
              Name: Day pass
              Title: Day pass
              Description: Day pass for £2.00
              Type: non-recurring
              Amount: 2
              CurrencyCode: GBP
              Interval: 1day
              Duration: 1day
          - Id: f97e2a42-488e-4b75-93bc-e837578aa837
            ExpiryDate: '2024-03-02T17:32:28Z'
            Status: cancelled
            IsIAP: true
            Package:
              Id: e42c70f9-5dd1-458d-b236-a7c6060da17d
              Name: Monthly subscription - International
              Title: Monthly subscription
              Description: Renewal of £5.00 due on 2 Mar 2021
              Type: recurring
              Amount: 5
              CurrencyCode: GBP
              Interval: 1month
              Duration: 6months
          - Id: 1a534a33-051a-46fb-a9c0-69f8f7450050
            Status: active
            Type: recurring
            CurrencyCode: GBP
            ExpiryDate: '2022-07-12T17:32:28Z'
            RenewalDate: '2021-07-12T17:32:28Z'
            IsIAP: false
            Package:
              Id: 72ae24e4-07b7-452f-a55e-ca8307233f92
              Name: Annual subscription - Canada
              Title: Annual subscription
              Description: Renewal of £100.00 due on 12 Jun 2021
              Type: recurring
              Amount: 100
              CurrencyCode: GBP
              Interval: 1month
              Duration: 12months
              TrialDuration: 1week
    AccountResponseGetBasicExample:
      value:
        EmailAddress: customer@email.com
        FirstName: Lorem
        LastName: Ipsum
        Subscriptions: []
        CustomDetails: []
    AccountResponseGetCustomFieldsExample:
      value:
        EmailAddress: customer@email.com
        FirstName: Lorem
        LastName: Ipsum
        CustomFields:
          - Id: 2b31e959-c540-4d39-ba76-5e6ef59df772
            Label: Date of Birth
            Required: true
            Value: '1988-08-19'
          - Id: 3a3e6d19-44c8-4882-8899-fa923f1214e9
            Label: Favourite Football Team
            Required: false
            Value: null
        Subscriptions: []
    AccountResponseGetCardDetailsExample:
      value:
        EmailAddress: customer@email.com
        FirstName: Lorem
        LastName: Ipsum
        BillingDetails:
          CardDetails:
            Provider: StripeCard
            Reference: visa XXXX-XXXX-XXXX-4242
            Country: GB
            Expires: '2024-07-21T17:32:28Z'
        CustomFields: []
        Subscriptions: []
    AccountPatchFirstNameExample:
      value:
        FirstName: Lorem
    AccountPatchLastNameExample:
      value:
        LastName: Ipsum
    AccountPatchCustomFieldsExample:
      value:
        CustomFields:
          - Id: 2b31e959-c540-4d39-ba76-5e6ef59df772
            Label: Date of Birth
            Required: true
            Value: '1988-08-19'
          - Id: 3b31e950-c540-4d39-ba76-5e6ef59df772
            Label: Favourite Rugby Team
            Required: false
            Value: null
  securitySchemes: {}
servers:
  - url: 'https://payments.streamamg.com'
